{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/pages/About.js","components/pages/NotFound.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onDeleteClick","a","delete","name","email","phone","className","onClick","style","cursor","float","color","bind","to","marginRight","Contacts","Fragment","key","Header","branding","href","defaultProps","About","NotFound","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","prototype","PropTypes","string","isRequired","func","AddContact","errors","e","target","onSubmit","preventDefault","newContact","post","history","push","EditContact","updateContact","match","params","put","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.3025d977.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          (contact) => contact.id !== action.payload\n        ),\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map((contact) =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        ),\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts],\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: (action) => this.setState((state) => reducer(state, action)),\n  };\n\n  async componentDidMount() {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n    this.setState({ contacts: res.data });\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { Consumer } from \"../../context\";\nimport axios from \"axios\";\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: false,\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\n  };\n\n  render() {\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n    return (\n      <Consumer>\n        {(value) => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}{\" \"}\n                <i\n                  onClick={() => {\n                    this.setState({\n                      showContactInfo: !showContactInfo,\n                    });\n                  }}\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: \"pointer\" }}\n                ></i>\n                <i\n                  className=\"fas fa-times\"\n                  style={{\n                    cursor: \"pointer\",\n                    float: \"right\",\n                    color: \"red\",\n                  }}\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                ></i>\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: \"pointer\",\n                      float: \"right\",\n                      color: \"black\",\n                      marginRight: \"1rem\",\n                    }}\n                  ></i>\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nContact.propTypes = {\n  contact: PropTypes.object.isRequired,\n};\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport Contact from \"./Contact\";\nimport { Consumer } from \"../../context\";\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {(value) => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Contact</span> List\n              </h1>\n              {contacts.map((contact) => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = (props) => {\n  const { branding } = props;\n  return (\n    <div>\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n        <div className=\"container\">\n          <a href=\"/\" className=\"navbar-brand\">\n            {branding}\n          </a>\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\"></i> Home\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\"></i> Add\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\"></i> About\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nHeader.defaultProps = {\n  branding: \"My App\",\n};\n\nHeader.propTypes = {\n  branding: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React from \"react\";\n\nexport default function About() {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contact</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function NotFound() {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst TextInputGroup = ({\n  label,\n  name,\n  value,\n  placeholder,\n  type,\n  onChange,\n  error,\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        type={type}\n        name={name}\n        className={classnames(\"form-control form-control-lg\", {\n          \"is-invalid\": error,\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\nTextInputGroup.prototype = {\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string,\n};\n\nTextInputGroup.defaultProps = {\n  type: \"text\",\n};\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport axios from \"axios\";\n\nimport TextInputGroup from \"../layout/TextInputGroup\";\n\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: \"\",\n  };\n\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    if (name === \"\") {\n      this.setState({\n        errors: {\n          name: \"Name is required\",\n        },\n      });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({\n        errors: {\n          email: \"Email is required\",\n        },\n      });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({\n        errors: {\n          phone: \"Phone is required\",\n        },\n      });\n      return;\n    }\n    const newContact = {\n      name,\n      email,\n      phone,\n    };\n\n    const res = await axios.post(\n      \"https://jsonplaceholder.typicode.com/users\",\n      newContact\n    );\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\n\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {},\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {(value) => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone Number\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport axios from \"axios\";\n\nimport TextInputGroup from \"../layout/TextInputGroup\";\n\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: \"\",\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n\n    this.setState({\n      name: res.data.name,\n      email: res.data.email,\n      phone: res.data.phone,\n    });\n  }\n\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n  onSubmit = async (dispatch, e) => {\n    e.preventDefault();\n\n    const { name, email, phone } = this.state;\n\n    if (name === \"\") {\n      this.setState({\n        errors: {\n          name: \"Name is required\",\n        },\n      });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({\n        errors: {\n          email: \"Email is required\",\n        },\n      });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({\n        errors: {\n          phone: \"Phone is required\",\n        },\n      });\n      return;\n    }\n\n    const updateContact = {\n      name,\n      email,\n      phone,\n    };\n\n    const { id } = this.props.match.params;\n\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updateContact\n    );\n\n    dispatch({\n      type: \"UPDATE_CONTACT\",\n      payload: res.data,\n    });\n\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {},\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {(value) => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone Number\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\n\nimport { Provider } from \"./context\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about\" component={About} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}